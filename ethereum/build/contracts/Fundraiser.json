{
  "contractName": "Fundraiser",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "donation_reciever",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minContribution",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "donationDescription",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "donee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "donor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minimumContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberDonors",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "contribute",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSummary",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"donation_reciever\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minContribution\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[],\"name\":\"contribute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"donationDescription\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"donee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"donor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSummary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberDonors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Duong Van Sang\",\"details\":\"Crowd Colla is smart contract is contract that allow creators and entrepreneurs to get fund from supporters for their project, and also let supporter join in approving their expense items\",\"methods\":{\"constructor\":{\"details\":\"init campaign \",\"params\":{\"description\":\"description of campaign, purpose of campaign\",\"donation_reciever\":\"who is author and manage project\",\"minContribution\":\"minimum money can contribute for project (in ETH)\"}},\"contribute()\":{\"details\":\"payable of campaign, where supporter send Ethereum to contribute for campaign\"},\"donate()\":{\"details\":\"payable of campaign, where supporter send Ethereum to contribute for campaign\"},\"getSummary()\":{\"details\":\"get summary information about campaign\"}},\"title\":\"Crowd fund smart contract, demonstration to solve problem of center crowd fund model\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/projects/BC-Group4/ethereum/contracts/Fundraiser.sol\":\"Fundraiser\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/projects/BC-Group4/ethereum/contracts/Fundraiser.sol\":{\"keccak256\":\"0xbd18c10b3a5dfe120c178d1589e9b32c3693ed90d702b22af446ec9ccd3bc667\",\"urls\":[\"bzz-raw://e808be6fe1df0566467efdd47595156a6082ad4a30275530e9066efbb91d8a61\",\"dweb:/ipfs/Qmb9eXczUPEtzzHAvDuF9ya4jDVDREviLHjfxvEPBBZDRN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516105313803806105318339818101604052606081101561003357600080fd5b8151602083015160408085018051915193959294830192918464010000000082111561005e57600080fd5b90830190602082018581111561007357600080fd5b825164010000000081118282018810171561008d57600080fd5b82525081516020918201929091019080838360005b838110156100ba5781810151838201526020016100a2565b50505050905090810190601f1680156100e75780820380516001836020036101000a031916815260200191505b506040525050600080546001600160a01b0319166001600160a01b038616179055506001829055805161012190600290602084019061012a565b505050506101c5565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061016b57805160ff1916838001178555610198565b82800160010185558215610198579182015b8281111561019857825182559160200191906001019061017d565b506101a49291506101a8565b5090565b6101c291905b808211156101a457600081556001016101ae565b90565b61035d806101d46000396000f3fe60806040526004361061007b5760003560e01c8063937e09b11161004e578063937e09b114610163578063b5c9aace14610178578063d7bb99ba14610202578063ed88c68e1461020c5761007b565b80634051ddac1461008057806354f0c897146100c45780636c56e647146100f55780637eee89ba1461013c575b600080fd5b34801561008c57600080fd5b50610095610214565b604080519485526020850193909352838301919091526001600160a01b03166060830152519081900360800190f35b3480156100d057600080fd5b506100d961022d565b604080516001600160a01b039092168252519081900360200190f35b34801561010157600080fd5b506101286004803603602081101561011857600080fd5b50356001600160a01b031661023c565b604080519115158252519081900360200190f35b34801561014857600080fd5b50610151610251565b60408051918252519081900360200190f35b34801561016f57600080fd5b50610151610257565b34801561018457600080fd5b5061018d61025d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101c75781810151838201526020016101af565b50505050905090810190601f1680156101f45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61020a6102e8565b005b61020a61031e565b600154600454600054919247926001600160a01b031690565b6000546001600160a01b031681565b60036020526000908152604090205460ff1681565b60045481565b60015481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156102e05780601f106102b5576101008083540402835291602001916102e0565b820191906000526020600020905b8154815290600101906020018083116102c357829003601f168201915b505050505081565b60015434116102f657600080fd5b336000908152600360205260409020805460ff19166001908117909155600480549091019055565b6103266102e8565b56fea265627a7a7231582000cbbd917e3d1e401340b4964fc431106064c37be20c347ce0ecbc4b417cd1d564736f6c63430005100032",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063937e09b11161004e578063937e09b114610163578063b5c9aace14610178578063d7bb99ba14610202578063ed88c68e1461020c5761007b565b80634051ddac1461008057806354f0c897146100c45780636c56e647146100f55780637eee89ba1461013c575b600080fd5b34801561008c57600080fd5b50610095610214565b604080519485526020850193909352838301919091526001600160a01b03166060830152519081900360800190f35b3480156100d057600080fd5b506100d961022d565b604080516001600160a01b039092168252519081900360200190f35b34801561010157600080fd5b506101286004803603602081101561011857600080fd5b50356001600160a01b031661023c565b604080519115158252519081900360200190f35b34801561014857600080fd5b50610151610251565b60408051918252519081900360200190f35b34801561016f57600080fd5b50610151610257565b34801561018457600080fd5b5061018d61025d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101c75781810151838201526020016101af565b50505050905090810190601f1680156101f45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61020a6102e8565b005b61020a61031e565b600154600454600054919247926001600160a01b031690565b6000546001600160a01b031681565b60036020526000908152604090205460ff1681565b60045481565b60015481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156102e05780601f106102b5576101008083540402835291602001916102e0565b820191906000526020600020905b8154815290600101906020018083116102c357829003601f168201915b505050505081565b60015434116102f657600080fd5b336000908152600360205260409020805460ff19166001908117909155600480549091019055565b6103266102e8565b56fea265627a7a7231582000cbbd917e3d1e401340b4964fc431106064c37be20c347ce0ecbc4b417cd1d564736f6c63430005100032",
  "sourceMap": "365:1949:0:-;;;1343:229;8:9:-1;5:2;;;30:1;27;20:12;5:2;1343:229:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1343:229:0;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1343:229:0;;420:4:-1;411:14;;;;1343:229:0;;;;;411:14:-1;1343:229:0;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1343:229:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1343:229:0;;-1:-1:-1;;1450:5:0;:25;;-1:-1:-1;;;;;;1450:25:0;-1:-1:-1;;;;;1450:25:0;;;;;-1:-1:-1;;1485:37:0;;;1532:33;;;;:19;;:33;;;;;:::i;:::-;;1343:229;;;365:1949;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;365:1949:0;;;-1:-1:-1;365:1949:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "365:1949:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2088:223;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2088:223:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2088:223:0;;;;;;;;;;;;;;448:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;448:20:0;;;:::i;:::-;;;;-1:-1:-1;;;;;448:20:0;;;;;;;;;;;;;;718:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;718:35:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;718:35:0;-1:-1:-1;;;;;718:35:0;;:::i;:::-;;;;;;;;;;;;;;;;;;887:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;887:24:0;;;:::i;:::-;;;;;;;;;;;;;;;;512:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;512:31:0;;;:::i;594:33::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;594:33:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;594:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1684:152;;;:::i;:::-;;1948:62;;;:::i;2088:223::-;2201:19;;2265:12;;2138:4;2289:5;2201:19;;2232:21;;-1:-1:-1;;;;;2289:5:0;;2088:223::o;448:20::-;;;-1:-1:-1;;;;;448:20:0;;:::o;718:35::-;;;;;;;;;;;;;;;:::o;887:24::-;;;;:::o;512:31::-;;;;:::o;594:33::-;;;;;;;;;;;;;;-1:-1:-1;;594:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1684:152::-;1751:19;;1739:9;:31;1731:40;;;;;;1787:10;1781:17;;;;:5;:17;;;;;:24;;-1:-1:-1;;1781:24:0;1801:4;1781:24;;;;;;1815:12;:14;;;;;;;1684:152::o;1948:62::-;1991:12;:10;:12::i;:::-;1948:62::o",
  "source": "pragma solidity ^0.5.0;\n\n/**\n * @title Crowd fund smart contract, demonstration to solve problem of center crowd fund model\n * @author Duong Van Sang\n * @dev Crowd Colla is smart contract is contract that allow creators and entrepreneurs to get fund\n * from supporters for their project, and also let supporter join in approving their expense items\n */\n\n //asdasda\ncontract Fundraiser{ \n\n    // address of the person that recieves the donation\n    address public donee;\n\n    // min contribution value in ETH\n    uint public minimumContribution;\n\n\n    // description about your DonationGoal\n    string public donationDescription;\n\n    // a mapping list of supporter address, to check if address is supporter or not\n    mapping(address=>bool) public donor;\n\n    // current number of donator of campaign, \n    // when any one contribute money for project, he/she will be come supporter\n    uint public numberDonors;\n\n\n    modifier DoneeOnly() {\n        require(msg.sender == donee);\n        _;\n    }\n\n    modifier DonorOnly() {\n        require(donor[msg.sender]);\n        _;\n    }\n\n    /**\n     * @dev init campaign \n     * @param donation_reciever who is author and manage project\n     * @param minContribution minimum money can contribute for project (in ETH)\n     * @param description description of campaign, purpose of campaign\n     */\n\n    constructor(address donation_reciever, uint minContribution, string memory description) public {  \n        donee = donation_reciever;\n        minimumContribution = minContribution;\n        donationDescription = description;\n    }\n\n    /**\n     * @dev payable of campaign, where supporter send Ethereum to contribute for campaign\n     */\n    function contribute() public payable {\n        require(msg.value > minimumContribution);\n        donor[msg.sender] = true;\n        numberDonors++;\n    }\n\n    /**\n     * @dev payable of campaign, where supporter send Ethereum to contribute for campaign\n     */\n    function donate() public payable {\n        contribute();\n    }    \n\n\n    /**\n     * @dev get summary information about campaign\n     */\n    function getSummary() public view returns (\n      uint, uint, uint, address\n      ) {\n        return (\n          minimumContribution,\n          address(this).balance,\n          numberDonors,\n          donee\n        );\n    }\n\n}\n",
  "sourcePath": "/projects/BC-Group4/ethereum/contracts/Fundraiser.sol",
  "ast": {
    "absolutePath": "/projects/BC-Group4/ethereum/contracts/Fundraiser.sol",
    "exportedSymbols": {
      "Fundraiser": [
        107
      ]
    },
    "id": 108,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Crowd fund smart contract, demonstration to solve problem of center crowd fund model\n@author Duong Van Sang\n@dev Crowd Colla is smart contract is contract that allow creators and entrepreneurs to get fund\nfrom supporters for their project, and also let supporter join in approving their expense items",
        "fullyImplemented": true,
        "id": 107,
        "linearizedBaseContracts": [
          107
        ],
        "name": "Fundraiser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "name": "donee",
            "nodeType": "VariableDeclaration",
            "scope": 107,
            "src": "448:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "448:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5,
            "name": "minimumContribution",
            "nodeType": "VariableDeclaration",
            "scope": 107,
            "src": "512:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "512:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7,
            "name": "donationDescription",
            "nodeType": "VariableDeclaration",
            "scope": 107,
            "src": "594:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 6,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "594:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "donor",
            "nodeType": "VariableDeclaration",
            "scope": 107,
            "src": "718:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "726:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "718:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 9,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "735:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "numberDonors",
            "nodeType": "VariableDeclaration",
            "scope": 107,
            "src": "887:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "887:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "940:56:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 16,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "958:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 17,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "958:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 18,
                          "name": "donee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "972:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "958:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 15,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        167,
                        168
                      ],
                      "referencedDeclaration": 167,
                      "src": "950:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "950:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "950:28:0"
                },
                {
                  "id": 22,
                  "nodeType": "PlaceholderStatement",
                  "src": "988:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 24,
            "name": "DoneeOnly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "937:2:0"
            },
            "src": "919:77:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "1023:54:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 27,
                          "name": "donor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1041:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 30,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "1047:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1047:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1041:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        167,
                        168
                      ],
                      "referencedDeclaration": 167,
                      "src": "1033:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "1033:26:0"
                },
                {
                  "id": 33,
                  "nodeType": "PlaceholderStatement",
                  "src": "1069:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 35,
            "name": "DonorOnly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1020:2:0"
            },
            "src": "1002:75:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "1438:134:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 44,
                      "name": "donee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1450:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 45,
                      "name": "donation_reciever",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1458:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1450:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "1450:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 48,
                      "name": "minimumContribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1485:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "minContribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1507:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1485:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "1485:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 52,
                      "name": "donationDescription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1532:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 53,
                      "name": "description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "1554:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1532:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "1532:33:0"
                }
              ]
            },
            "documentation": "@dev init campaign \n@param donation_reciever who is author and manage project\n@param minContribution minimum money can contribute for project (in ETH)\n@param description description of campaign, purpose of campaign",
            "id": 57,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "name": "donation_reciever",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1355:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "name": "minContribution",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1382:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1382:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1404:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1354:76:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1438:0:0"
            },
            "scope": 107,
            "src": "1343:229:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "1721:115:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "1739:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1739:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 63,
                          "name": "minimumContribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "1751:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1739:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        167,
                        168
                      ],
                      "referencedDeclaration": 167,
                      "src": "1731:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1731:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "donor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1781:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 70,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "1787:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1787:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1781:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1801:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1781:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1781:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1815:14:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "numberDonors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1815:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:14:0"
                }
              ]
            },
            "documentation": "@dev payable of campaign, where supporter send Ethereum to contribute for campaign",
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contribute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1703:2:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1721:0:0"
            },
            "scope": 107,
            "src": "1684:152:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "1981:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 81,
                      "name": "contribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "1991:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1991:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:12:0"
                }
              ]
            },
            "documentation": "@dev payable of campaign, where supporter send Ethereum to contribute for campaign",
            "id": 85,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1963:2:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:0:0"
            },
            "scope": 107,
            "src": "1948:62:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "2172:139:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "minimumContribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "2201:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 98,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "2240:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Fundraiser_$107",
                                "typeString": "contract Fundraiser"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Fundraiser_$107",
                                "typeString": "contract Fundraiser"
                              }
                            ],
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2232:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2232:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2232:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "numberDonors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "2265:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "donee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "2289:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 103,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2189:115:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$",
                      "typeString": "tuple(uint256,uint256,uint256,address)"
                    }
                  },
                  "functionReturnParameters": 95,
                  "id": 104,
                  "nodeType": "Return",
                  "src": "2182:122:0"
                }
              ]
            },
            "documentation": "@dev get summary information about campaign",
            "id": 106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSummary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2107:2:0"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "2138:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "2144:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2144:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "2150:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2150:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "2156:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2156:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2130:41:0"
            },
            "scope": 107,
            "src": "2088:223:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 108,
        "src": "365:1949:0"
      }
    ],
    "src": "0:2315:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/projects/BC-Group4/ethereum/contracts/Fundraiser.sol",
      "exportedSymbols": {
        "Fundraiser": [
          107
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": "@title Crowd fund smart contract, demonstration to solve problem of center crowd fund model\n@author Duong Van Sang\n@dev Crowd Colla is smart contract is contract that allow creators and entrepreneurs to get fund\nfrom supporters for their project, and also let supporter join in approving their expense items",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            107
          ],
          "name": "Fundraiser",
          "scope": 108
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "name": "donee",
              "scope": 107,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 2,
                "name": "ElementaryTypeName",
                "src": "448:7:0"
              }
            ],
            "id": 3,
            "name": "VariableDeclaration",
            "src": "448:20:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "minimumContribution",
              "scope": 107,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 4,
                "name": "ElementaryTypeName",
                "src": "512:4:0"
              }
            ],
            "id": 5,
            "name": "VariableDeclaration",
            "src": "512:31:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "donationDescription",
              "scope": 107,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 6,
                "name": "ElementaryTypeName",
                "src": "594:6:0"
              }
            ],
            "id": 7,
            "name": "VariableDeclaration",
            "src": "594:33:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "donor",
              "scope": 107,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 8,
                    "name": "ElementaryTypeName",
                    "src": "726:7:0"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 9,
                    "name": "ElementaryTypeName",
                    "src": "735:4:0"
                  }
                ],
                "id": 10,
                "name": "Mapping",
                "src": "718:22:0"
              }
            ],
            "id": 11,
            "name": "VariableDeclaration",
            "src": "718:35:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "numberDonors",
              "scope": 107,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 12,
                "name": "ElementaryTypeName",
                "src": "887:4:0"
              }
            ],
            "id": 13,
            "name": "VariableDeclaration",
            "src": "887:24:0"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "DoneeOnly",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 14,
                "name": "ParameterList",
                "src": "937:2:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                167,
                                168
                              ],
                              "referencedDeclaration": 167,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 15,
                            "name": "Identifier",
                            "src": "950:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 164,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 16,
                                    "name": "Identifier",
                                    "src": "958:3:0"
                                  }
                                ],
                                "id": 17,
                                "name": "MemberAccess",
                                "src": "958:10:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3,
                                  "type": "address",
                                  "value": "donee"
                                },
                                "id": 18,
                                "name": "Identifier",
                                "src": "972:5:0"
                              }
                            ],
                            "id": 19,
                            "name": "BinaryOperation",
                            "src": "958:19:0"
                          }
                        ],
                        "id": 20,
                        "name": "FunctionCall",
                        "src": "950:28:0"
                      }
                    ],
                    "id": 21,
                    "name": "ExpressionStatement",
                    "src": "950:28:0"
                  },
                  {
                    "id": 22,
                    "name": "PlaceholderStatement",
                    "src": "988:1:0"
                  }
                ],
                "id": 23,
                "name": "Block",
                "src": "940:56:0"
              }
            ],
            "id": 24,
            "name": "ModifierDefinition",
            "src": "919:77:0"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "DonorOnly",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 25,
                "name": "ParameterList",
                "src": "1020:2:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                167,
                                168
                              ],
                              "referencedDeclaration": 167,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 26,
                            "name": "Identifier",
                            "src": "1033:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "mapping(address => bool)",
                                  "value": "donor"
                                },
                                "id": 27,
                                "name": "Identifier",
                                "src": "1041:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 164,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 28,
                                    "name": "Identifier",
                                    "src": "1047:3:0"
                                  }
                                ],
                                "id": 29,
                                "name": "MemberAccess",
                                "src": "1047:10:0"
                              }
                            ],
                            "id": 30,
                            "name": "IndexAccess",
                            "src": "1041:17:0"
                          }
                        ],
                        "id": 31,
                        "name": "FunctionCall",
                        "src": "1033:26:0"
                      }
                    ],
                    "id": 32,
                    "name": "ExpressionStatement",
                    "src": "1033:26:0"
                  },
                  {
                    "id": 33,
                    "name": "PlaceholderStatement",
                    "src": "1069:1:0"
                  }
                ],
                "id": 34,
                "name": "Block",
                "src": "1023:54:0"
              }
            ],
            "id": 35,
            "name": "ModifierDefinition",
            "src": "1002:75:0"
          },
          {
            "attributes": {
              "documentation": "@dev init campaign \n@param donation_reciever who is author and manage project\n@param minContribution minimum money can contribute for project (in ETH)\n@param description description of campaign, purpose of campaign",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 107,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "donation_reciever",
                      "scope": 57,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 36,
                        "name": "ElementaryTypeName",
                        "src": "1355:7:0"
                      }
                    ],
                    "id": 37,
                    "name": "VariableDeclaration",
                    "src": "1355:25:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "minContribution",
                      "scope": 57,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 38,
                        "name": "ElementaryTypeName",
                        "src": "1382:4:0"
                      }
                    ],
                    "id": 39,
                    "name": "VariableDeclaration",
                    "src": "1382:20:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "description",
                      "scope": 57,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 40,
                        "name": "ElementaryTypeName",
                        "src": "1404:6:0"
                      }
                    ],
                    "id": 41,
                    "name": "VariableDeclaration",
                    "src": "1404:25:0"
                  }
                ],
                "id": 42,
                "name": "ParameterList",
                "src": "1354:76:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 43,
                "name": "ParameterList",
                "src": "1438:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3,
                              "type": "address",
                              "value": "donee"
                            },
                            "id": 44,
                            "name": "Identifier",
                            "src": "1450:5:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37,
                              "type": "address",
                              "value": "donation_reciever"
                            },
                            "id": 45,
                            "name": "Identifier",
                            "src": "1458:17:0"
                          }
                        ],
                        "id": 46,
                        "name": "Assignment",
                        "src": "1450:25:0"
                      }
                    ],
                    "id": 47,
                    "name": "ExpressionStatement",
                    "src": "1450:25:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5,
                              "type": "uint256",
                              "value": "minimumContribution"
                            },
                            "id": 48,
                            "name": "Identifier",
                            "src": "1485:19:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 39,
                              "type": "uint256",
                              "value": "minContribution"
                            },
                            "id": 49,
                            "name": "Identifier",
                            "src": "1507:15:0"
                          }
                        ],
                        "id": 50,
                        "name": "Assignment",
                        "src": "1485:37:0"
                      }
                    ],
                    "id": 51,
                    "name": "ExpressionStatement",
                    "src": "1485:37:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7,
                              "type": "string storage ref",
                              "value": "donationDescription"
                            },
                            "id": 52,
                            "name": "Identifier",
                            "src": "1532:19:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 41,
                              "type": "string memory",
                              "value": "description"
                            },
                            "id": 53,
                            "name": "Identifier",
                            "src": "1554:11:0"
                          }
                        ],
                        "id": 54,
                        "name": "Assignment",
                        "src": "1532:33:0"
                      }
                    ],
                    "id": 55,
                    "name": "ExpressionStatement",
                    "src": "1532:33:0"
                  }
                ],
                "id": 56,
                "name": "Block",
                "src": "1438:134:0"
              }
            ],
            "id": 57,
            "name": "FunctionDefinition",
            "src": "1343:229:0"
          },
          {
            "attributes": {
              "documentation": "@dev payable of campaign, where supporter send Ethereum to contribute for campaign",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "contribute",
              "scope": 107,
              "stateMutability": "payable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 58,
                "name": "ParameterList",
                "src": "1703:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 59,
                "name": "ParameterList",
                "src": "1721:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                167,
                                168
                              ],
                              "referencedDeclaration": 167,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 60,
                            "name": "Identifier",
                            "src": "1731:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 164,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 61,
                                    "name": "Identifier",
                                    "src": "1739:3:0"
                                  }
                                ],
                                "id": 62,
                                "name": "MemberAccess",
                                "src": "1739:9:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5,
                                  "type": "uint256",
                                  "value": "minimumContribution"
                                },
                                "id": 63,
                                "name": "Identifier",
                                "src": "1751:19:0"
                              }
                            ],
                            "id": 64,
                            "name": "BinaryOperation",
                            "src": "1739:31:0"
                          }
                        ],
                        "id": 65,
                        "name": "FunctionCall",
                        "src": "1731:40:0"
                      }
                    ],
                    "id": 66,
                    "name": "ExpressionStatement",
                    "src": "1731:40:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "mapping(address => bool)",
                                  "value": "donor"
                                },
                                "id": 67,
                                "name": "Identifier",
                                "src": "1781:5:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 164,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 68,
                                    "name": "Identifier",
                                    "src": "1787:3:0"
                                  }
                                ],
                                "id": 69,
                                "name": "MemberAccess",
                                "src": "1787:10:0"
                              }
                            ],
                            "id": 70,
                            "name": "IndexAccess",
                            "src": "1781:17:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 71,
                            "name": "Literal",
                            "src": "1801:4:0"
                          }
                        ],
                        "id": 72,
                        "name": "Assignment",
                        "src": "1781:24:0"
                      }
                    ],
                    "id": 73,
                    "name": "ExpressionStatement",
                    "src": "1781:24:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13,
                              "type": "uint256",
                              "value": "numberDonors"
                            },
                            "id": 74,
                            "name": "Identifier",
                            "src": "1815:12:0"
                          }
                        ],
                        "id": 75,
                        "name": "UnaryOperation",
                        "src": "1815:14:0"
                      }
                    ],
                    "id": 76,
                    "name": "ExpressionStatement",
                    "src": "1815:14:0"
                  }
                ],
                "id": 77,
                "name": "Block",
                "src": "1721:115:0"
              }
            ],
            "id": 78,
            "name": "FunctionDefinition",
            "src": "1684:152:0"
          },
          {
            "attributes": {
              "documentation": "@dev payable of campaign, where supporter send Ethereum to contribute for campaign",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "donate",
              "scope": 107,
              "stateMutability": "payable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 79,
                "name": "ParameterList",
                "src": "1963:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 80,
                "name": "ParameterList",
                "src": "1981:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 78,
                              "type": "function ()",
                              "value": "contribute"
                            },
                            "id": 81,
                            "name": "Identifier",
                            "src": "1991:10:0"
                          }
                        ],
                        "id": 82,
                        "name": "FunctionCall",
                        "src": "1991:12:0"
                      }
                    ],
                    "id": 83,
                    "name": "ExpressionStatement",
                    "src": "1991:12:0"
                  }
                ],
                "id": 84,
                "name": "Block",
                "src": "1981:29:0"
              }
            ],
            "id": 85,
            "name": "FunctionDefinition",
            "src": "1948:62:0"
          },
          {
            "attributes": {
              "documentation": "@dev get summary information about campaign",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getSummary",
              "scope": 107,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 86,
                "name": "ParameterList",
                "src": "2107:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 106,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 87,
                        "name": "ElementaryTypeName",
                        "src": "2138:4:0"
                      }
                    ],
                    "id": 88,
                    "name": "VariableDeclaration",
                    "src": "2138:4:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 106,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 89,
                        "name": "ElementaryTypeName",
                        "src": "2144:4:0"
                      }
                    ],
                    "id": 90,
                    "name": "VariableDeclaration",
                    "src": "2144:4:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 106,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 91,
                        "name": "ElementaryTypeName",
                        "src": "2150:4:0"
                      }
                    ],
                    "id": 92,
                    "name": "VariableDeclaration",
                    "src": "2150:4:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 106,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 93,
                        "name": "ElementaryTypeName",
                        "src": "2156:7:0"
                      }
                    ],
                    "id": 94,
                    "name": "VariableDeclaration",
                    "src": "2156:7:0"
                  }
                ],
                "id": 95,
                "name": "ParameterList",
                "src": "2130:41:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 95
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(uint256,uint256,uint256,address)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5,
                              "type": "uint256",
                              "value": "minimumContribution"
                            },
                            "id": 96,
                            "name": "Identifier",
                            "src": "2201:19:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balance",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Fundraiser_$107",
                                          "typeString": "contract Fundraiser"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 97,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2232:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 178,
                                      "type": "contract Fundraiser",
                                      "value": "this"
                                    },
                                    "id": 98,
                                    "name": "Identifier",
                                    "src": "2240:4:0"
                                  }
                                ],
                                "id": 99,
                                "name": "FunctionCall",
                                "src": "2232:13:0"
                              }
                            ],
                            "id": 100,
                            "name": "MemberAccess",
                            "src": "2232:21:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13,
                              "type": "uint256",
                              "value": "numberDonors"
                            },
                            "id": 101,
                            "name": "Identifier",
                            "src": "2265:12:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3,
                              "type": "address",
                              "value": "donee"
                            },
                            "id": 102,
                            "name": "Identifier",
                            "src": "2289:5:0"
                          }
                        ],
                        "id": 103,
                        "name": "TupleExpression",
                        "src": "2189:115:0"
                      }
                    ],
                    "id": 104,
                    "name": "Return",
                    "src": "2182:122:0"
                  }
                ],
                "id": 105,
                "name": "Block",
                "src": "2172:139:0"
              }
            ],
            "id": 106,
            "name": "FunctionDefinition",
            "src": "2088:223:0"
          }
        ],
        "id": 107,
        "name": "ContractDefinition",
        "src": "365:1949:0"
      }
    ],
    "id": 108,
    "name": "SourceUnit",
    "src": "0:2315:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-07-05T18:33:53.935Z",
  "devdoc": {
    "author": "Duong Van Sang",
    "details": "Crowd Colla is smart contract is contract that allow creators and entrepreneurs to get fund from supporters for their project, and also let supporter join in approving their expense items",
    "methods": {
      "constructor": {
        "details": "init campaign ",
        "params": {
          "description": "description of campaign, purpose of campaign",
          "donation_reciever": "who is author and manage project",
          "minContribution": "minimum money can contribute for project (in ETH)"
        }
      },
      "contribute()": {
        "details": "payable of campaign, where supporter send Ethereum to contribute for campaign"
      },
      "donate()": {
        "details": "payable of campaign, where supporter send Ethereum to contribute for campaign"
      },
      "getSummary()": {
        "details": "get summary information about campaign"
      }
    },
    "title": "Crowd fund smart contract, demonstration to solve problem of center crowd fund model"
  },
  "userdoc": {
    "methods": {}
  }
}